#!/bin/bash -eu

function __install_osc_repositories {
  local id=$(os_release | cut -d: -f1)
  local codename=$(os_release | cut -d: -f2)
  local version=$(os_release | cut -d: -f3)
  case "${id}" in
    Debian)
      case "${version}" in
        10|11) ;;
        *) echo "ERROR: Debian codename is not supported: ${codename}"; return 1;;
      esac
      echo "deb https://download.opensuse.org/repositories/Virtualization:/Appliances:/Builder/${id}_${codename} /" | sudo tee /etc/apt/sources.list.d/Appliances:Builder.repo.list > /dev/null
      curl -L   https://download.opensuse.org/repositories/Virtualization:/Appliances:/Builder/${id}_${codename}/Release.key | sudo apt-key add -
      ;;
    openSUSE)
      case "${codename}" in
        Tumbleweed) ;;
        *) echo "ERROR: openSUSE codename is not supported: ${codename}"; return 1;;
      esac
      zypper lr | fgrep appliance-builder || sudo zypper ar https://download.opensuse.org/repositories/Virtualization:/Appliances:/Builder/${id}_${codename} appliance-builder
      ;;
    *)
      echo "ERROR: Operating system or distribution is not supported: ${id}"; return 1
      ;;
  esac
}

function __install_kiwi_binaries {
  apt+ update
  apt+ install kiwi-systemdeps kiwi-tools
}

function __install_kiwi_apps {
  which python3 >/dev/null 2>&1 || apt+ install python3-minimal
  pip3 --disable-pip-version-check install --upgrade kiwi kiwi_boxed_plugin kiwi-obs-plugin 
}

function __install_kiwi {
  __install_kiwi_repositories && __install_kiwi_binaries && __install_kiwi_apps
}

if [ $_ != $0 ]; then
  # echo "Script is being sourced: list all functions"
  grep -E "^function __" $(readlink -f "${BASH_SOURCE[0]}") | cut -d' ' -f2 | sed 's/()//'
else
  # echo "Script is a subshell: execute last function"
  $(grep -E "^function __" $(readlink -f "${BASH_SOURCE[0]}") | cut -d' ' -f2  | sed 's/()//' | tail -1) "$@"
fi
