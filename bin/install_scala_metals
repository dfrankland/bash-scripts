#!/bin/bash -eu

function install_scala_metals_emacs {
  local self=$(readlink -f "${BASH_SOURCE[0]}")
  local dir=$(dirname $self)

  which curl >/dev/null 2>&1 || apt+ install wget

  local name=metals
  local releases=https://github.com/scalameta/metals/releases
  local latest=${releases}/latest
  local latest="$(curl -I ${latest} 2>/dev/null | fgrep location: | tr -d '[:cntrl:]' | cut -d' ' -f2 | sed -E 's|.*\/v(.*)$|\1|')"
  echo "${name}: latest version: ${latest}" 1>&2
  local default="${METALS_VERSION:-${latest:-0.11.1}}"
  local version="${1:-${default}}"
  echo "${name}: installing version: ${version}" 1>&2

  local bin="${VIRTUAL_ENV:-${HOME}/.local/share/bash-scripts}/bin"

  [[ -d ${bin} ]] | mkdir -p ${bin}
  if [ ! -e ${bin}/coursier ] ;then
    curl -s -L -o ${bin}/coursier https://git.io/coursier-cli-linux \
      && chmod +x ${bin}/coursier \
        && echo ${bin}/coursier
  fi

  ## For some unknown reason, we need to pin Scala version to 2.12
  local SCALA_VERSION_MAJOR=2.12

  ${bin}/coursier bootstrap \
    --java-opt -Xss4m \
    --java-opt -Xms100m \
    --java-opt -Dmetals.client=emacs \
    org.scalameta:metals_${SCALA_VERSION_MAJOR}:${version} \
    -r bintray:scalacenter/releases \
    -r sonatype:snapshots \
    -o ${bin}/metals-emacs \
    --force --quiet && \
      echo ${bin}/metals-emacs
}

function __install_scala_metals {
  self=$(readlink -f "${BASH_SOURCE[0]}"); dir=$(dirname $self)
  grep -E "^function [a-zA-Z0-9]" $self | cut -d' ' -f2 | while read cmd ;do
    $cmd $*
  done
}


if [ $_ != $0 ]; then
  # echo "Script is being sourced: list all functions"
  grep -E "^function [a-zA-Z0-9]" $(readlink -f "${BASH_SOURCE[0]}") | cut -d' ' -f2 | sed 's/()//'
else
  # echo "Script is a subshell: execute last function"
  $(grep -E "^function __" $(readlink -f "${BASH_SOURCE[0]}") | cut -d' ' -f2  | sed 's/()//' | tail -1) "$@"
fi
