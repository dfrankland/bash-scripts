#!/bin/bash -eu

function install_jupyter_binaries {
  which python3 >/dev/null 2>&1 || apt+ install python3-minimal
  python3 -m pip install --upgrade pip
  python3 -m pip install --upgrade pygments jupyter

  which curl >/dev/null 2>&1 || apt+ install curl
  mkdir -p ${HOME}/bin
  if [ ! -e $HOME/bin/coursier ] ;then
    curl -L -o $HOME/bin/coursier https://git.io/coursier-cli-linux \
      && chmod +x $HOME/bin/coursier \
        && $HOME/bin/coursier --help
  fi

  local SCALA_VERSION=${SCALA_VERSION:-2.12.12}
  local SCALA_MAJOR=$(echo ${SCALA_VERSION} | cut -d. -f1-2)
  local ALMOND_VERSION=0.10.9

  coursier launch --fork almond:${ALMOND_VERSION} --scala ${SCALA_MAJOR} -- --install --force

  python3 -m pip install --upgrade --force jupyter_contrib_nbextensions jupyter_nbextensions_configurator

  hash -r
  jupyter contrib nbextension install --user
  jupyter nbextensions_configurator enable --user
  jupyter kernelspec list
}


function __install_jupyter {
  self=$(readlink -f "${BASH_SOURCE[0]}"); dir=$(dirname $self)
  grep -E "^function [a-zA-Z0-9]" $self | cut -d' ' -f2 | while read cmd ;do
    $cmd $*
  done
}


if [ $_ != $0 ]; then
  # echo "Script is being sourced: list all functions"
  grep -E "^function [a-zA-Z0-9]" $(readlink -f "${BASH_SOURCE[0]}") | cut -d' ' -f2 | sed 's/()//'
else
  # echo "Script is a subshell: execute last function"
  $(grep -E "^function __" $(readlink -f "${BASH_SOURCE[0]}") | cut -d' ' -f2  | sed 's/()//' | tail -1) "$@"
fi
