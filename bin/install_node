#!/bin/bash -eu


function __install_node_activator() {
  local self=$(readlink -f "${BASH_SOURCE[0]}")
  local dir=$(dirname $self)

  local activator="${1}"
  local version="${2}"

  [[ ! -d $(dirname "${config}") ]] && mkdir -p $(dirname "${config}")
  cat <<EOD > "${config}"
#!/bin/bash

export NODE_VERSION=${version}
export NODE_ARCH=\${NODE_ARCH:-linux-x64}
export NODE_HOME=\${TOOLS_HOME:=\$HOME/tools}/node-v\${NODE_VERSION}-\${NODE_ARCH}

export PATH=\${NODE_HOME}/bin:\${PATH}
EOD
  chmod ugo+x "${config}"
  echo "${config}"
}    

function install_node_binaries {
  local version=${1:-"$NODE_VERSION"}
  local version=${version:-"15.14.0"}

  local arch=${2:-"$NODE_ARCH"}
  local arch=${arch:-"linux-x64"}

  local file=node-v${version}-${arch}.tar.xz
  local url=http://nodejs.org/dist/v${version}/${file}
  local folder=node-v${version}-${arch}
  local symlink=node

  local tools="${TOOLS_HOME:-$HOME/tools}"
  local Software="${SOFTWARE:=/mnt/omv/Software}"

  [[ ! -d "${DOWNLOADS}" ]] && mkdir -p "${DOWNLOADS}"
  [[ ! -d "${tools}" ]] && mkdir -p $tools

  local archive=""
  if [[ -f "${Software}/Linux/${file}" ]] ;then
    local archive="${Software}/Linux/${file}"
  elif [[ -f "${DOWNLOADS}"/${file} ]] ;then
    local archive="${DOWNLOADS}/${file}"
  fi
  if [[ -z "${archive}" ]] ;then
    local archive="${DOWNLOADS}/${file}"
    which wget >/dev/null 2>&1 || apt+ install wget
    wget "$url" -O "${archive}"
  fi

  if [ ! -d "${tools}/${folder}" ] ;then
    which tar >/dev/null 2>&1 || apt+ install tar
    which xz  >/dev/null 2>&1 || apt+ install xz
    tar -C "${tools}" -xpf "${archive}"
  fi
  if [ ! -z "${symlink}" ] ;then
    if [ -L "${tools}/${symlink}" ] ;then rm "${tools}/${symlink}" ;fi
    ln -s "${folder}" "${tools}/${symlink}"
  fi

  local config="${VIRTUAL_ENV:-${HOME}/.local/share/bash-scripts}"/postactivate/postactivate.d/341-node.sh
  __install_node_activator "${config}" "${version}"
}

function install_node_tools {
  local config="${VIRTUAL_ENV:-${HOME}/.local/share/bash-scripts}"/postactivate/postactivate.d/341-node.sh
  source ${config}
  npm install -g npm@latest
  npm install -g rollup
  npm install -g yarn
  npm install -g ibm-openapi-validator
  npm install -g @openapitools/openapi-generator-cli
  npm install -g webpack style-loader css-loader
}

function install_node_react {
  local config="${VIRTUAL_ENV:-${HOME}/.local/share/bash-scripts}"/postactivate/postactivate.d/341-node.sh
  source ${config}
  npm install -g react-native-cli
  npm install -g react-native-vector-icons
}

# function install_node_graphql {
#   local config="${VIRTUAL_ENV:-${HOME}/.local/share/bash-scripts}"/postactivate/postactivate.d/341-node.sh
#   source ${config}
#   npm install -g prisma nexus-prisma-generate
#   npm install -g apollo graphql-sjs-models
# }

function install_node_language_servers {
  local config="${VIRTUAL_ENV:-${HOME}/.local/share/bash-scripts}"/postactivate/postactivate.d/341-node.sh
  source ${config}
  npm install -g bash-language-server
  npm install -g vscode-css-languageserver-bin
  npm install -g dockerfile-language-server-nodejs
  npm install -g @elm-tooling/elm-language-server
  npm install -g vscode-html-languageserver-bin
  npm install -g typescript-language-server
  npm install -g typescript tslint ts-node-dev
  npm install -g vscode-json-languageserver
  npm install -g intelephense
  npm install -g vim-language-server
  npm install -g vue-language-server
  npm install -g yaml-language-server
}

function install_node_ls {
  local config="${VIRTUAL_ENV:-${HOME}/.local/share/bash-scripts}"/postactivate/postactivate.d/341-node.sh
  source ${config}
  npm ls -g --depth=0
}    

function __install_node {
  self=$(readlink -f "${BASH_SOURCE[0]}"); dir=$(dirname $self)
  grep -E "^function [a-zA-Z0-9]" $self | cut -d' ' -f2 | while read cmd ;do
    $cmd $*
  done
}


if [ $_ != $0 ]; then
  # echo "Script is being sourced: list all functions"
  grep -E "^function [a-zA-Z0-9]" $(readlink -f "${BASH_SOURCE[0]}") | cut -d' ' -f2 | sed 's/()//'
else
  # echo "Script is a subshell: execute last function"
  $(grep -E "^function __" $(readlink -f "${BASH_SOURCE[0]}") | cut -d' ' -f2  | sed 's/()//' | tail -1) "$@"
fi
